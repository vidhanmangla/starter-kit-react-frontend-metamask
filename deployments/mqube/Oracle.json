{
  "address": "0xC6c77416e14cd052Cd79cdAD7BfDB3f9952200E0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Oracle__AlreadyAnOracle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Oracle__NotAnOracle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Oracle__NotAnOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Oracle__NotInMempool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Oracle__RemovingLastOracle",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        }
      ],
      "name": "AddOracleEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EtherReceivedEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "clientAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "GetLatestOffChainDataEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "HistoricalDataClearedEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offChainData",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        }
      ],
      "name": "HistoricalDataStoredEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        }
      ],
      "name": "RemoveOracleEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offChainData",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "clientAddress",
          "type": "address"
        }
      ],
      "name": "SetLatestOffChainDataEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        }
      ],
      "name": "SetThresholdEvent",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "addOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        }
      ],
      "name": "getHistoricalData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offChainData",
              "type": "uint256"
            }
          ],
          "internalType": "struct Oracle.HistoricalData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestOffChainData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "historicalData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offChainData",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        }
      ],
      "name": "isHistoricalDataFull",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxHistoricalDataSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "removeOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requestIdToResponse",
      "outputs": [
        {
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "clientAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "offChainData",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offChainData",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_clientAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "setLatestOffChainData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_threshold",
          "type": "uint8"
        }
      ],
      "name": "setThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb6d3d6e708a43d85683ef5b91ff4627fed3eff41235bbbb64d923518f3bee9ca",
  "receipt": {
    "to": null,
    "from": "0x739819c7704841bd2886CBc1788293C78D255039",
    "contractAddress": "0xC6c77416e14cd052Cd79cdAD7BfDB3f9952200E0",
    "transactionIndex": 0,
    "gasUsed": "1278415",
    "logsBloom": "0x
    "blockHash": "0xe608dafe61a6f3852ed665a66d0a5574687419140820e48ad779fc87e17ca5ce",
    "transactionHash": "0xb6d3d6e708a43d85683ef5b91ff4627fed3eff41235bbbb64d923518f3bee9ca",
    "logs": [],
    "blockNumber": 495475,
    "cumulativeGasUsed": "1278415",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x739819c7704841bd2886CBc1788293C78D255039"
  ],
  "numDeployments": 1,
  "solcInputHash": "04a5f5cc498ff938b4bbaaf2b03519a6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Oracle__AlreadyAnOracle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Oracle__NotAnOracle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Oracle__NotAnOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Oracle__NotInMempool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Oracle__RemovingLastOracle\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"}],\"name\":\"AddOracleEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReceivedEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"GetLatestOffChainDataEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"HistoricalDataClearedEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offChainData\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"}],\"name\":\"HistoricalDataStoredEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"}],\"name\":\"RemoveOracleEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offChainData\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"}],\"name\":\"SetLatestOffChainDataEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"SetThresholdEvent\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"addOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"}],\"name\":\"getHistoricalData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offChainData\",\"type\":\"uint256\"}],\"internalType\":\"struct Oracle.HistoricalData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestOffChainData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"historicalData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offChainData\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"}],\"name\":\"isHistoricalDataFull\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxHistoricalDataSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"removeOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIdToResponse\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"offChainData\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offChainData\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_clientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"setLatestOffChainData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_threshold\",\"type\":\"uint8\"}],\"name\":\"setThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"vidhan.mangla@mqube.com\",\"details\":\"will add later if necessary\",\"kind\":\"dev\",\"methods\":{\"addOracle(address)\":{\"details\":\"allows the owner to add a new oracle\"},\"constructor\":{\"details\":\"specify the contract owner's address (see deploy script)\"},\"getHistoricalData(address)\":{\"details\":\"get historical data for a specific oracle\"},\"getLatestOffChainData()\":{\"details\":\"get the latest offChainData of a given asset from the oracles\"},\"isHistoricalDataFull(address)\":{\"details\":\"check if historical data for a specific oracle is full\"},\"removeOracle(address)\":{\"details\":\"allows the owner to remove an existing oracle\"},\"setLatestOffChainData(uint256,address,uint256)\":{\"details\":\"update the latest offChainData of a given asset on the blockchain\"},\"setThreshold(uint8)\":{\"details\":\"minimum number of oracle responses\"}},\"stateVariables\":{\"randNonce\":{\"details\":\"compute and generate a unique identifier for the offChainData request\"}},\"title\":\"a network of oracles for the mqube private blockchain network\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"an oracle contract to pull decentralised data from APIs and provide it to other smart contracts on the blockchain\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oracle.sol\":\"Oracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/ClientInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\nabstract contract ClientInterface {\\n  function callback(uint256 _offChainData, uint256 id) public virtual;\\n}\",\"keccak256\":\"0x974cbb27727636e0b69ab13f1f50921bac08093acdf8fe86a70413aa0b5489fc\",\"license\":\"MIT\"},\"contracts/Interfaces/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n\\npragma solidity 0.8.19;\\n\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n  struct Role {\\n    mapping (address => bool) bearer;\\n  }\\n\\n  /**\\n   * @dev give an account access to this role\\n   */\\n  function add(Role storage role, address account) internal {\\n    require(account != address(0));\\n    require(!has(role, account));\\n\\n    role.bearer[account] = true;\\n  }\\n\\n  /**\\n   * @dev remove an account's access to this role\\n   */\\n  function remove(Role storage role, address account) internal {\\n    require(account != address(0));\\n    require(has(role, account));\\n    role.bearer[account] = false;\\n  }\\n\\n  /**\\n   * @dev check if an account has this role\\n   * @return bool\\n   */\\n  function has(Role storage role, address account)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    require(account != address(0));\\n    return role.bearer[account];\\n  }\\n}\",\"keccak256\":\"0x2e2270ad95884dbd819a8601feb6da48563ab35d98701c94b3dc5cf064e999cf\",\"license\":\"MIT\"},\"contracts/Interfaces/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @title SafeMath\\n * @notice this library does not contain the 'mod' functions as they were redundant and not used in the oracle contract\\n * @dev Math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    \\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on overflow.\\n     * @param a First operand\\n     * @param b Second operand\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on underflow\\n     * (when the result is negative).\\n     * @param a First operand\\n     * @param b Second operand\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction underflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on underflow\\n     * (when the result is negative).\\n     * @param a First operand\\n     * @param b Second operand\\n     * @param errorMessage Custom error message\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\\n     * @param a First operand\\n     * @param b Second operand\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, reverting on division by zero.\\n     * @param a First operand\\n     * @param b Second operand\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, reverting with custom message on division by zero.\\n     * @param a First operand\\n     * @param b Second operand\\n     * @param errorMessage Custom error message\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n}\",\"keccak256\":\"0x4bd96c6f7dcfe72e754991f31ee5791e2c609635061f5bd59b69af943c3cd1d6\",\"license\":\"MIT\"},\"contracts/Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n\\n/// @dev it is recommended that Solidity contracts are fully annotated using NatSpec for all public interfaces (everything in the ABI)\\n/// @dev documentation is inserted above each contract, interface, library, function, and event using NatSpec notation format\\n/// @dev a public state variable is equivalent to a function for the purposes of NatSpec\\n\\n\\npragma solidity 0.8.19;\\n\\n\\n/* IMPORTS */\\n\\nimport \\\"./Interfaces/Roles.sol\\\";\\nimport \\\"./Interfaces/SafeMath.sol\\\";\\nimport \\\"./Interfaces/ClientInterface.sol\\\";\\n\\n\\n/* ERRORS */\\n\\nerror Oracle__NotAnOwner();\\nerror Oracle__AlreadyAnOracle();\\nerror Oracle__NotAnOracle();\\nerror Oracle__RemovingLastOracle();\\nerror Oracle__NotInMempool();\\n\\n\\n/// @title a network of oracles for the mqube private blockchain network\\n/// @author vidhan.mangla@mqube.com\\n/// @notice an oracle contract to pull decentralised data from APIs and provide it to other smart contracts on the blockchain\\n/// @dev will add later if necessary\\ncontract Oracle {\\n\\n\\n  /* EVENTS */\\n\\n  event GetLatestOffChainDataEvent(address clientAddress, uint256 id);\\n  event SetLatestOffChainDataEvent(uint256 offChainData, address clientAddress);\\n  event AddOracleEvent(address oracleAddress);\\n  event RemoveOracleEvent(address oracleAddress);\\n  event SetThresholdEvent(uint256 threshold);\\n  event EtherReceivedEvent(address sender, uint256 amount);\\n  event HistoricalDataStoredEvent(uint256 indexed id, uint256 timestamp, uint256 offChainData, address oracleAddress);\\n  event HistoricalDataClearedEvent(uint256 indexed id, uint256 timestamp);\\n\\n\\n  /* ROLES LIBRARY */\\n\\n  using Roles for Roles.Role;\\n  Roles.Role private owners;\\n  Roles.Role private oracles;\\n\\n\\n  /* STATE VARIABLES */\\n  \\n  using SafeMath for uint256;\\n  uint8 private numOracles = 0;\\n  uint8 private THRESHOLD = 1;\\n  /// @dev compute and generate a unique identifier for the offChainData request\\n  uint256 private randNonce = 0;\\n  uint256 private modulus = 1000;\\n  uint256 public maxHistoricalDataSize = 100;\\n\\n\\n  /* MAPPINGS */\\n\\n  mapping(uint256=>bool) memPool;\\n  mapping(uint256=>Response[]) public requestIdToResponse;\\n  mapping(address=>HistoricalData[]) public historicalData;\\n\\n\\n  /* STRUCTS */\\n\\n  struct Response {\\n    address oracleAddress;\\n    address clientAddress;\\n    uint256 offChainData;\\n  }\\n\\n  struct HistoricalData {\\n    uint256 timestamp;\\n    uint256 offChainData;\\n  }\\n\\n\\n  /* MODIFIERS */\\n\\n  modifier onlyOwner() {\\n    if (!owners.has(msg.sender)) {\\n      revert Oracle__NotAnOwner();\\n    }\\n    _;\\n  }\\n\\n\\n  /* CONSTRUCTOR FUNCTION */\\n\\n  /// @dev specify the contract owner's address (see deploy script)\\n  constructor (address _owner) {\\n    owners.add(_owner);\\n  }\\n\\n\\n  /* MAIN FUNCTIONS */\\n\\n  /// @dev allows the owner to add a new oracle\\n  function addOracle(address _oracle) public onlyOwner {\\n    if (oracles.has(_oracle)) {\\n      revert Oracle__AlreadyAnOracle();\\n    }\\n    oracles.add(_oracle);\\n    numOracles++;\\n    emit AddOracleEvent(_oracle);\\n  }\\n\\n  /// @dev allows the owner to remove an existing oracle\\n  function removeOracle(address _oracle) public onlyOwner {\\n    if (!oracles.has(_oracle)) {\\n      revert Oracle__NotAnOracle();\\n    }\\n    if (!(numOracles > 1)) {\\n      revert Oracle__RemovingLastOracle();\\n    }\\n    oracles.remove(_oracle);\\n    numOracles--;\\n    emit RemoveOracleEvent(_oracle);\\n  }\\n\\n  /// @dev minimum number of oracle responses\\n  function setThreshold(uint8 _threshold) public {\\n    if (!owners.has(msg.sender)) {\\n      revert Oracle__NotAnOwner();\\n    }\\n    THRESHOLD = _threshold;\\n    emit SetThresholdEvent(THRESHOLD);\\n  }\\n\\n  /// @dev get the latest offChainData of a given asset from the oracles\\n  function getLatestOffChainData() public returns (uint256) {\\n    randNonce++;\\n    uint256 id = uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce))) % modulus;\\n    memPool[id] = true;\\n    emit GetLatestOffChainDataEvent(msg.sender, id);\\n    return id;\\n  }\\n\\n  /// @dev helper function to sort the array\\n  function sort(uint256[] memory arr, uint256 left, uint256 right) internal pure {\\n      if (left < right) {\\n          uint256 pivot = arr[right];\\n          uint256 partitionIndex = partition(arr, left, right, pivot);\\n\\n          // sort the left and right arrays\\n          sort(arr, left, partitionIndex - 1);\\n          sort(arr, partitionIndex + 1, right);\\n      }\\n  }\\n\\n  /// @dev partition function for quicksort\\n  function partition(uint256[] memory arr, uint256 left, uint256 right, uint256 pivot) internal pure returns (uint256) {\\n      uint256 i = left;\\n      for (uint256 j = left; j < right; j++) {\\n          if (arr[j] < pivot) {\\n              (arr[i], arr[j]) = (arr[j], arr[i]);\\n              i++;\\n          }\\n      }\\n      (arr[i], arr[right]) = (arr[right], arr[i]);\\n      return i;\\n  }\\n\\n  /// @dev helper function to calculate percentile\\n  function percentile(uint256[] memory arr, uint256 perc) internal pure returns (uint256) {\\n      uint256 len = arr.length;\\n      uint256 n = len * perc / 100;\\n      if (n == len) {\\n          return arr[len - 1];\\n      }\\n      return arr[n];\\n  }\\n\\n  /// @dev consensus mechanism with removing the outliers by using quartiles and interquartile ranges\\n  function computeAverageOffChainData(uint256 _id) private view returns (uint256) {\\n      uint256 len = requestIdToResponse[_id].length;\\n      if (len == 0) return 0;\\n\\n      // step 1: sort the responses\\n      uint256[] memory data = new uint256[](len);\\n      for (uint256 i = 0; i < len; i++) {\\n          data[i] = requestIdToResponse[_id][i].offChainData;\\n      }\\n      sort(data, 0, len - 1);\\n\\n      // step 2: calculate quartiles\\n      uint256 q1 = percentile(data, 25);\\n      uint256 q3 = percentile(data, 75);\\n\\n      // step 3: compute interquartile range (IQR)\\n      uint256 iqr = q3.sub(q1);\\n\\n      // step 4: identify and remove outliers\\n      uint256 lowerBound = q1.sub(iqr.mul(3).div(2));\\n      uint256 upperBound = q3.add(iqr.mul(3).div(2));\\n\\n      uint256 sum = 0;\\n      uint256 count = 0;\\n      for (uint256 i = 0; i < len; i++) {\\n          if (data[i] >= lowerBound && data[i] <= upperBound) {\\n              sum = sum.add(data[i]);\\n              count++;\\n          }\\n      }\\n\\n      // step 5: calculate the average\\n      if (count == 0) return 0;\\n      return sum.div(count);\\n  }\\n\\n  /// @dev update the latest offChainData of a given asset on the blockchain\\n  function setLatestOffChainData(uint256 _offChainData, address _clientAddress, uint256 _id) public {\\n    // if (!oracles.has(msg.sender)) {\\n    //   revert Oracle__NotAnOracle();\\n    // }\\n    if (!memPool[_id]) {\\n      revert Oracle__NotInMempool();\\n    }\\n    requestIdToResponse[_id].push(Response(msg.sender, _clientAddress, _offChainData));\\n    uint256 numResponses = requestIdToResponse[_id].length;\\n    if (numResponses == THRESHOLD) {\\n        uint256 computedOffChainData = computeAverageOffChainData(_id);\\n        delete memPool[_id];\\n        delete requestIdToResponse[_id];\\n        ClientInterface(_clientAddress).callback(computedOffChainData, _id);\\n        emit SetLatestOffChainDataEvent(computedOffChainData, _clientAddress);\\n    }\\n    // store historical data per oracle address\\n    /// @dev recommend not to use on mainnet, only on MQube private blockchain\\n    if (historicalData[msg.sender].length >= maxHistoricalDataSize) {\\n      delete historicalData[msg.sender];\\n      emit HistoricalDataClearedEvent(_id, block.timestamp);\\n    }\\n    HistoricalData memory newData = HistoricalData({\\n      timestamp: block.timestamp,\\n      offChainData: _offChainData\\n    });\\n    historicalData[msg.sender].push(newData);\\n    emit HistoricalDataStoredEvent(_id, newData.timestamp, newData.offChainData, msg.sender);\\n  }\\n\\n  /// @dev get historical data for a specific oracle\\n  function getHistoricalData(address oracleAddress) public view returns (HistoricalData[] memory) {\\n    return historicalData[oracleAddress];\\n  }\\n\\n  /// @dev check if historical data for a specific oracle is full\\n  function isHistoricalDataFull(address oracleAddress) public view returns (bool) {\\n    return historicalData[oracleAddress].length >= maxHistoricalDataSize;\\n  }\\n\\n\\n  /* RECEIVE & FALLBACK FUNCTIONS */\\n\\n  /// @dev allows the contract to directly receive ether\\n  receive() external payable {\\n      emit EtherReceivedEvent(msg.sender, msg.value);\\n  }\\n\\n  /// @dev a catch-all for any ether sent to the contract in cases not covered by the receive function\\n  fallback() external payable {\\n      emit EtherReceivedEvent(msg.sender, msg.value);\\n  }\\n\\n\\n}\",\"keccak256\":\"0xb4e52d84c1266839826b52f3e361404e52c8219d43abd2eadd5f17db99c83a9c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526002805461ffff191661010017905560006003556103e860045560646005553480156200003057600080fd5b50604051620015a9380380620015a98339810160408190526200005391620000ed565b6200006060008262000067565b506200011f565b6001600160a01b0381166200007b57600080fd5b620000878282620000b7565b156200009257600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620000cd57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6000602082840312156200010057600080fd5b81516001600160a01b03811681146200011857600080fd5b9392505050565b61147a806200012f6000396000f3fe6080604052600436106100b55760003560e01c8063da4b81d911610069578063e5a986031161004e578063e5a986031461028d578063ed7bfd50146102ad578063fdc85fc4146102c3576100f5565b8063da4b81d914610238578063df5dd1a51461026d576100f5565b8063691525671161009a57806369152567146101825780638bbc085a146101cf578063b34c55f414610215576100f5565b80633efe5d011461012a578063490022251461014c576100f5565b366100f557604080513381523460208201527fc0cdab6ced19ce3372efda53aec6b0802e63718e5aa5b77807792330f5b5aab991015b60405180910390a1005b604080513381523460208201527fc0cdab6ced19ce3372efda53aec6b0802e63718e5aa5b77807792330f5b5aab991016100eb565b34801561013657600080fd5b5061014a6101453660046111d6565b6102e3565b005b34801561015857600080fd5b5061016c61016736600461120b565b6105b7565b6040516101799190611226565b60405180910390f35b34801561018e57600080fd5b506101bf61019d36600461120b565b6005546001600160a01b03909116600090815260086020526040902054101590565b6040519015158152602001610179565b3480156101db57600080fd5b506101ef6101ea366004611275565b610640565b604080516001600160a01b03948516815293909216602084015290820152606001610179565b34801561022157600080fd5b5061022a61068d565b604051908152602001610179565b34801561024457600080fd5b50610258610253366004611297565b610760565b60408051928352602083019190915201610179565b34801561027957600080fd5b5061014a61028836600461120b565b61079c565b34801561029957600080fd5b5061014a6102a83660046112c1565b610886565b3480156102b957600080fd5b5061022a60055481565b3480156102cf57600080fd5b5061014a6102de36600461120b565b6108fb565b60008181526006602052604090205460ff1661032b576040517fe07a52e000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260076020818152604080842081516060810183523381526001600160a01b038881168286019081529382018a8152835460018181018655858a52878a2094516003909202909401805491841673ffffffffffffffffffffffffffffffffffffffff199283161781559551938601805494909316931692909217905551600292830155938590529190529054905460ff6101009091041681036104c25760006103d783610a1a565b6000848152600660209081526040808320805460ff19169055600790915281209192506104049190611116565b6040517fb5d73ba400000000000000000000000000000000000000000000000000000000815260048101829052602481018490526001600160a01b0385169063b5d73ba490604401600060405180830381600087803b15801561046657600080fd5b505af115801561047a573d6000803e3d6000fd5b5050604080518481526001600160a01b03881660208201527f0864d1b301fd3eeb924c5e4f851287d5ee2c7ad77b35938e35abd0bf79b63662935001905060405180910390a1505b600554336000908152600860205260409020541061052d573360009081526008602052604081206104f29161113a565b817fd31766e70931a4460861f30507707919fadcb1040e986a8c570f569277eec2424260405161052491815260200190565b60405180910390a25b60408051808201825242815260208082018781523360008181526008845285812080546001808201835591835291859020865160029093020182815593519301839055855190815292830191909152818401529151909184917fa7f87eaebd0faf19aeaf35bbdcb34f99ff37c10b0a755339322a76d64535a09c9181900360600190a25050505050565b6001600160a01b0381166000908152600860209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610635578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906105ef565b505050509050919050565b6007602052816000526040600020818154811061065c57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b0391821694509116915083565b600380546000918261069e836112fa565b9190505550600060045442336003546040516020016106e29392919092835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b6040516020818303038152906040528051906020012060001c6107059190611329565b600081815260066020908152604091829020805460ff1916600117905581513381529081018390529192507f954ab4cd7325c56e12268ef375c56b87127bc6ec531246e330cf11674fdf18cc910160405180910390a1919050565b6008602052816000526040600020818154811061077c57600080fd5b600091825260209091206002909102018054600190910154909250905082565b6107a7600033610c47565b6107c457604051630162708560e41b815260040160405180910390fd5b6107cf600182610c47565b15610806576040517f970e740200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610811600182610c80565b6002805460ff169060006108248361133d565b91906101000a81548160ff021916908360ff160217905550507fed46b7525d27f2470ee188e1d85693a6a8b59537b58701408b2f53588e63d1db8160405161087b91906001600160a01b0391909116815260200190565b60405180910390a150565b610891600033610c47565b6108ae57604051630162708560e41b815260040160405180910390fd5b6002805461ff00191661010060ff8481168202929092179283905560405192041681527f0f4f9dbb729778e455b47da600927c51653092f52835705824cd1db65a29ed0d9060200161087b565b610906600033610c47565b61092357604051630162708560e41b815260040160405180910390fd5b61092e600182610c47565b610964576040517f63787cc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600254600160ff909116116109a5576040517fe6f6be2d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109b0600182610ccc565b6002805460ff169060006109c38361135c565b91906101000a81548160ff021916908360ff160217905550507f8d35b822981364028d4bb40af1edcfd97f4e186c8ccf97bafcc9adc68bd58c6d8160405161087b91906001600160a01b0391909116815260200190565b600081815260076020526040812054808203610a395750600092915050565b60008167ffffffffffffffff811115610a5457610a54611379565b604051908082528060200260200182016040528015610a7d578160200160208202803683370190505b50905060005b82811015610aec576000858152600760205260409020805482908110610aab57610aab61138f565b906000526020600020906003020160020154828281518110610acf57610acf61138f565b602090810291909101015280610ae4816112fa565b915050610a83565b50610b03816000610afe6001866113a5565b610d14565b6000610b10826019610d77565b90506000610b1f83604b610d77565b90506000610b2d8284610ded565b90506000610b51610b4a6002610b44856003610e36565b90610ed9565b8590610ded565b90506000610b6f610b686002610b44866003610e36565b8590610f1b565b905060008060005b89811015610c145784898281518110610b9257610b9261138f565b602002602001015110158015610bc1575083898281518110610bb657610bb661138f565b602002602001015111155b15610c0257610bf2898281518110610bdb57610bdb61138f565b602002602001015184610f1b90919063ffffffff16565b925081610bfe816112fa565b9250505b80610c0c816112fa565b915050610b77565b5080600003610c2e575060009a9950505050505050505050565b610c388282610ed9565b9b9a5050505050505050505050565b60006001600160a01b038216610c5c57600080fd5b506001600160a01b03811660009081526020839052604090205460ff165b92915050565b6001600160a01b038116610c9357600080fd5b610c9d8282610c47565b15610ca757600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b038116610cdf57600080fd5b610ce98282610c47565b610cf257600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b80821015610d72576000838281518110610d3057610d3061138f565b602002602001015190506000610d4885858585610f7a565b9050610d5a8585610afe6001856113a5565b610d6f85610d698360016113b8565b85610d14565b50505b505050565b8151600090816064610d8985846113cb565b610d9391906113e2565b9050818103610dc95784610da86001846113a5565b81518110610db857610db861138f565b602002602001015192505050610c7a565b848181518110610ddb57610ddb61138f565b60200260200101519250505092915050565b6000610e2f83836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f77008152506110ae565b9392505050565b600082600003610e4857506000610c7a565b6000610e5483856113cb565b905082610e6185836113e2565b14610e2f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f770000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000610e2f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506110e8565b600080610f2883856113b8565b905083811015610e2f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610ed0565b600083805b848110156110365783878281518110610f9a57610f9a61138f565b6020026020010151101561102457868181518110610fba57610fba61138f565b6020026020010151878381518110610fd457610fd461138f565b6020026020010151888481518110610fee57610fee61138f565b602002602001018984815181106110075761100761138f565b60209081029190910101919091525281611020816112fa565b9250505b8061102e816112fa565b915050610f7f565b508584815181106110495761104961138f565b60200260200101518682815181106110635761106361138f565b602002602001015187838151811061107d5761107d61138f565b602002602001018887815181106110965761109661138f565b60209081029190910101919091525295945050505050565b600081848411156110d25760405162461bcd60e51b8152600401610ed091906113f6565b5060006110df84866113a5565b95945050505050565b600081836111095760405162461bcd60e51b8152600401610ed091906113f6565b5060006110df84866113e2565b5080546000825560030290600052602060002090810190611137919061115b565b50565b5080546000825560020290600052602060002090810190611137919061119f565b5b8082111561119b57805473ffffffffffffffffffffffffffffffffffffffff19908116825560018201805490911690556000600282015560030161115c565b5090565b5b8082111561119b57600080825560018201556002016111a0565b80356001600160a01b03811681146111d157600080fd5b919050565b6000806000606084860312156111eb57600080fd5b833592506111fb602085016111ba565b9150604084013590509250925092565b60006020828403121561121d57600080fd5b610e2f826111ba565b602080825282518282018190526000919060409081850190868401855b8281101561126857815180518552860151868501529284019290850190600101611243565b5091979650505050505050565b6000806040838503121561128857600080fd5b50508035926020909101359150565b600080604083850312156112aa57600080fd5b6112b3836111ba565b946020939093013593505050565b6000602082840312156112d357600080fd5b813560ff81168114610e2f57600080fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161130c5761130c6112e4565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261133857611338611313565b500690565b600060ff821660ff8103611353576113536112e4565b60010192915050565b600060ff82168061136f5761136f6112e4565b6000190192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b81810381811115610c7a57610c7a6112e4565b80820180821115610c7a57610c7a6112e4565b8082028115828204841417610c7a57610c7a6112e4565b6000826113f1576113f1611313565b500490565b600060208083528351808285015260005b8181101561142357858101830151858201604001528201611407565b506000604082860101526040601f19601f830116850101925050509291505056fea26469706673582212208dfec9bb8eedda702be5a53c43d57839ecfc23edd6779967ec5b75db9e7f489164736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100b55760003560e01c8063da4b81d911610069578063e5a986031161004e578063e5a986031461028d578063ed7bfd50146102ad578063fdc85fc4146102c3576100f5565b8063da4b81d914610238578063df5dd1a51461026d576100f5565b8063691525671161009a57806369152567146101825780638bbc085a146101cf578063b34c55f414610215576100f5565b80633efe5d011461012a578063490022251461014c576100f5565b366100f557604080513381523460208201527fc0cdab6ced19ce3372efda53aec6b0802e63718e5aa5b77807792330f5b5aab991015b60405180910390a1005b604080513381523460208201527fc0cdab6ced19ce3372efda53aec6b0802e63718e5aa5b77807792330f5b5aab991016100eb565b34801561013657600080fd5b5061014a6101453660046111d6565b6102e3565b005b34801561015857600080fd5b5061016c61016736600461120b565b6105b7565b6040516101799190611226565b60405180910390f35b34801561018e57600080fd5b506101bf61019d36600461120b565b6005546001600160a01b03909116600090815260086020526040902054101590565b6040519015158152602001610179565b3480156101db57600080fd5b506101ef6101ea366004611275565b610640565b604080516001600160a01b03948516815293909216602084015290820152606001610179565b34801561022157600080fd5b5061022a61068d565b604051908152602001610179565b34801561024457600080fd5b50610258610253366004611297565b610760565b60408051928352602083019190915201610179565b34801561027957600080fd5b5061014a61028836600461120b565b61079c565b34801561029957600080fd5b5061014a6102a83660046112c1565b610886565b3480156102b957600080fd5b5061022a60055481565b3480156102cf57600080fd5b5061014a6102de36600461120b565b6108fb565b60008181526006602052604090205460ff1661032b576040517fe07a52e000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260076020818152604080842081516060810183523381526001600160a01b038881168286019081529382018a8152835460018181018655858a52878a2094516003909202909401805491841673ffffffffffffffffffffffffffffffffffffffff199283161781559551938601805494909316931692909217905551600292830155938590529190529054905460ff6101009091041681036104c25760006103d783610a1a565b6000848152600660209081526040808320805460ff19169055600790915281209192506104049190611116565b6040517fb5d73ba400000000000000000000000000000000000000000000000000000000815260048101829052602481018490526001600160a01b0385169063b5d73ba490604401600060405180830381600087803b15801561046657600080fd5b505af115801561047a573d6000803e3d6000fd5b5050604080518481526001600160a01b03881660208201527f0864d1b301fd3eeb924c5e4f851287d5ee2c7ad77b35938e35abd0bf79b63662935001905060405180910390a1505b600554336000908152600860205260409020541061052d573360009081526008602052604081206104f29161113a565b817fd31766e70931a4460861f30507707919fadcb1040e986a8c570f569277eec2424260405161052491815260200190565b60405180910390a25b60408051808201825242815260208082018781523360008181526008845285812080546001808201835591835291859020865160029093020182815593519301839055855190815292830191909152818401529151909184917fa7f87eaebd0faf19aeaf35bbdcb34f99ff37c10b0a755339322a76d64535a09c9181900360600190a25050505050565b6001600160a01b0381166000908152600860209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610635578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906105ef565b505050509050919050565b6007602052816000526040600020818154811061065c57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b0391821694509116915083565b600380546000918261069e836112fa565b9190505550600060045442336003546040516020016106e29392919092835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b6040516020818303038152906040528051906020012060001c6107059190611329565b600081815260066020908152604091829020805460ff1916600117905581513381529081018390529192507f954ab4cd7325c56e12268ef375c56b87127bc6ec531246e330cf11674fdf18cc910160405180910390a1919050565b6008602052816000526040600020818154811061077c57600080fd5b600091825260209091206002909102018054600190910154909250905082565b6107a7600033610c47565b6107c457604051630162708560e41b815260040160405180910390fd5b6107cf600182610c47565b15610806576040517f970e740200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610811600182610c80565b6002805460ff169060006108248361133d565b91906101000a81548160ff021916908360ff160217905550507fed46b7525d27f2470ee188e1d85693a6a8b59537b58701408b2f53588e63d1db8160405161087b91906001600160a01b0391909116815260200190565b60405180910390a150565b610891600033610c47565b6108ae57604051630162708560e41b815260040160405180910390fd5b6002805461ff00191661010060ff8481168202929092179283905560405192041681527f0f4f9dbb729778e455b47da600927c51653092f52835705824cd1db65a29ed0d9060200161087b565b610906600033610c47565b61092357604051630162708560e41b815260040160405180910390fd5b61092e600182610c47565b610964576040517f63787cc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600254600160ff909116116109a5576040517fe6f6be2d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109b0600182610ccc565b6002805460ff169060006109c38361135c565b91906101000a81548160ff021916908360ff160217905550507f8d35b822981364028d4bb40af1edcfd97f4e186c8ccf97bafcc9adc68bd58c6d8160405161087b91906001600160a01b0391909116815260200190565b600081815260076020526040812054808203610a395750600092915050565b60008167ffffffffffffffff811115610a5457610a54611379565b604051908082528060200260200182016040528015610a7d578160200160208202803683370190505b50905060005b82811015610aec576000858152600760205260409020805482908110610aab57610aab61138f565b906000526020600020906003020160020154828281518110610acf57610acf61138f565b602090810291909101015280610ae4816112fa565b915050610a83565b50610b03816000610afe6001866113a5565b610d14565b6000610b10826019610d77565b90506000610b1f83604b610d77565b90506000610b2d8284610ded565b90506000610b51610b4a6002610b44856003610e36565b90610ed9565b8590610ded565b90506000610b6f610b686002610b44866003610e36565b8590610f1b565b905060008060005b89811015610c145784898281518110610b9257610b9261138f565b602002602001015110158015610bc1575083898281518110610bb657610bb661138f565b602002602001015111155b15610c0257610bf2898281518110610bdb57610bdb61138f565b602002602001015184610f1b90919063ffffffff16565b925081610bfe816112fa565b9250505b80610c0c816112fa565b915050610b77565b5080600003610c2e575060009a9950505050505050505050565b610c388282610ed9565b9b9a5050505050505050505050565b60006001600160a01b038216610c5c57600080fd5b506001600160a01b03811660009081526020839052604090205460ff165b92915050565b6001600160a01b038116610c9357600080fd5b610c9d8282610c47565b15610ca757600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b038116610cdf57600080fd5b610ce98282610c47565b610cf257600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b80821015610d72576000838281518110610d3057610d3061138f565b602002602001015190506000610d4885858585610f7a565b9050610d5a8585610afe6001856113a5565b610d6f85610d698360016113b8565b85610d14565b50505b505050565b8151600090816064610d8985846113cb565b610d9391906113e2565b9050818103610dc95784610da86001846113a5565b81518110610db857610db861138f565b602002602001015192505050610c7a565b848181518110610ddb57610ddb61138f565b60200260200101519250505092915050565b6000610e2f83836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f77008152506110ae565b9392505050565b600082600003610e4857506000610c7a565b6000610e5483856113cb565b905082610e6185836113e2565b14610e2f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f770000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000610e2f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506110e8565b600080610f2883856113b8565b905083811015610e2f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610ed0565b600083805b848110156110365783878281518110610f9a57610f9a61138f565b6020026020010151101561102457868181518110610fba57610fba61138f565b6020026020010151878381518110610fd457610fd461138f565b6020026020010151888481518110610fee57610fee61138f565b602002602001018984815181106110075761100761138f565b60209081029190910101919091525281611020816112fa565b9250505b8061102e816112fa565b915050610f7f565b508584815181106110495761104961138f565b60200260200101518682815181106110635761106361138f565b602002602001015187838151811061107d5761107d61138f565b602002602001018887815181106110965761109661138f565b60209081029190910101919091525295945050505050565b600081848411156110d25760405162461bcd60e51b8152600401610ed091906113f6565b5060006110df84866113a5565b95945050505050565b600081836111095760405162461bcd60e51b8152600401610ed091906113f6565b5060006110df84866113e2565b5080546000825560030290600052602060002090810190611137919061115b565b50565b5080546000825560020290600052602060002090810190611137919061119f565b5b8082111561119b57805473ffffffffffffffffffffffffffffffffffffffff19908116825560018201805490911690556000600282015560030161115c565b5090565b5b8082111561119b57600080825560018201556002016111a0565b80356001600160a01b03811681146111d157600080fd5b919050565b6000806000606084860312156111eb57600080fd5b833592506111fb602085016111ba565b9150604084013590509250925092565b60006020828403121561121d57600080fd5b610e2f826111ba565b602080825282518282018190526000919060409081850190868401855b8281101561126857815180518552860151868501529284019290850190600101611243565b5091979650505050505050565b6000806040838503121561128857600080fd5b50508035926020909101359150565b600080604083850312156112aa57600080fd5b6112b3836111ba565b946020939093013593505050565b6000602082840312156112d357600080fd5b813560ff81168114610e2f57600080fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161130c5761130c6112e4565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261133857611338611313565b500690565b600060ff821660ff8103611353576113536112e4565b60010192915050565b600060ff82168061136f5761136f6112e4565b6000190192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b81810381811115610c7a57610c7a6112e4565b80820180821115610c7a57610c7a6112e4565b8082028115828204841417610c7a57610c7a6112e4565b6000826113f1576113f1611313565b500490565b600060208083528351808285015260005b8181101561142357858101830151858201604001528201611407565b506000604082860101526040601f19601f830116850101925050509291505056fea26469706673582212208dfec9bb8eedda702be5a53c43d57839ecfc23edd6779967ec5b75db9e7f489164736f6c63430008130033",
  "devdoc": {
    "author": "vidhan.mangla@mqube.com",
    "details": "will add later if necessary",
    "kind": "dev",
    "methods": {
      "addOracle(address)": {
        "details": "allows the owner to add a new oracle"
      },
      "constructor": {
        "details": "specify the contract owner's address (see deploy script)"
      },
      "getHistoricalData(address)": {
        "details": "get historical data for a specific oracle"
      },
      "getLatestOffChainData()": {
        "details": "get the latest offChainData of a given asset from the oracles"
      },
      "isHistoricalDataFull(address)": {
        "details": "check if historical data for a specific oracle is full"
      },
      "removeOracle(address)": {
        "details": "allows the owner to remove an existing oracle"
      },
      "setLatestOffChainData(uint256,address,uint256)": {
        "details": "update the latest offChainData of a given asset on the blockchain"
      },
      "setThreshold(uint8)": {
        "details": "minimum number of oracle responses"
      }
    },
    "stateVariables": {
      "randNonce": {
        "details": "compute and generate a unique identifier for the offChainData request"
      }
    },
    "title": "a network of oracles for the mqube private blockchain network",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "an oracle contract to pull decentralised data from APIs and provide it to other smart contracts on the blockchain",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 337,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "owners",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Role)17_storage"
      },
      {
        "astId": 340,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "oracles",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(Role)17_storage"
      },
      {
        "astId": 346,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "numOracles",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 349,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "THRESHOLD",
        "offset": 1,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 353,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "randNonce",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 356,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "modulus",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 359,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "maxHistoricalDataSize",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 363,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "memPool",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 369,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "requestIdToResponse",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_array(t_struct(Response)382_storage)dyn_storage)"
      },
      {
        "astId": 375,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "historicalData",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_struct(HistoricalData)387_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(HistoricalData)387_storage)dyn_storage": {
        "base": "t_struct(HistoricalData)387_storage",
        "encoding": "dynamic_array",
        "label": "struct Oracle.HistoricalData[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Response)382_storage)dyn_storage": {
        "base": "t_struct(Response)382_storage",
        "encoding": "dynamic_array",
        "label": "struct Oracle.Response[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(HistoricalData)387_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Oracle.HistoricalData[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(HistoricalData)387_storage)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_array(t_struct(Response)382_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Oracle.Response[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Response)382_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_struct(HistoricalData)387_storage": {
        "encoding": "inplace",
        "label": "struct Oracle.HistoricalData",
        "members": [
          {
            "astId": 384,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "timestamp",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 386,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "offChainData",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Response)382_storage": {
        "encoding": "inplace",
        "label": "struct Oracle.Response",
        "members": [
          {
            "astId": 377,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "oracleAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 379,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "clientAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 381,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "offChainData",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Role)17_storage": {
        "encoding": "inplace",
        "label": "struct Roles.Role",
        "members": [
          {
            "astId": 16,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "bearer",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}